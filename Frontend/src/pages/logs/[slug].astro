---
import {getAllPosts } from "../../sanity/api.js";
import { urlForImage } from '../../sanity/urlForImage.js';
import Layout from '../../layouts/logLayout.astro';
import PortableText from "../../components/PortableText.astro";

export async function getStaticPaths() {
    const allBlogPosts = await getAllPosts();
    return allBlogPosts.map(post => ({ params: { slug: post.slug.current }, props: { post } }));
};

const { post } = Astro.props;
---

<div id="mode-switcher" class="mode-switcher" data-theme="light">
	<button id="light-button" class="mode-button active">LIGHT</button>
	<button id="dark-button" class="mode-button">DARK</button>
</div>

<Layout title={post.title}>

	<main class="container">

        <div id="light-mode" class="light-mode">
            <div class="log-header">
                <div class="col-50 log-text-header">
                    <div class="log-text-containter">
                        <div class="log-detail-container">
                            <div class="log-title-container">
                                <h1 class="project-title midnight-text-color">{post.title}</h1>
                                <p class="body accent-text-color">
                                    {post.eventDate} | #{post.tag}
                                </p>
                            </div>
                            <h2 class="project-description midnight-text-color">{post.description}</h2>
                        </div>
                        <p class="body accent-text-color">{post.logEmoji}</p>
                    </div>
                </div>
                <div class="col-50 thumbnail-image"><img src={urlForImage(post.thumbnailImage).url()} alt="" class="image-cover"></div>
            </div>
    
            <div class="log-image-container">
                <PortableText portableText={post.content}/>
            </div>
        </div>

        <div id="dark-mode" class="dark-mode">
            <div class="log-header">
                <div class="col-50 log-text-header">
                    <div class="log-text-containter">
                        <div class="log-detail-container">
                            <div class="log-title-container">
                                <h1 class="project-title midnight-text-color">{post.title}</h1>
                                <p class="body accent-text-color">
                                    {post.eventDate} | #{post.tag}
                                </p>
                            </div>
                            <h2 class="project-description midnight-text-color">{post.description}</h2>
                        </div>
                        <p class="body accent-text-color">{post.logEmoji}</p>
                    </div>
                </div>
                <div class="col-50 thumbnail-image"><img src={urlForImage(post.thumbnailImage).url()} alt="" class="image-cover"></div>
            </div>
    
            <div class="log-image-container">
                <PortableText portableText={post.content}/>
            </div>
        </div>

	</main>

</Layout>

<script>
    const body = document.getElementById('element');
	const lightButton = document.getElementById('light-button');
	const darkButton = document.getElementById('dark-button');
	const lightWrapper = document.getElementById('light-mode');
	const darkWrapper = document.getElementById('dark-mode');
	const modeSwitcher = document.getElementById('mode-switcher');

	let currentTheme = modeSwitcher.getAttribute('data-theme');


	darkButton.addEventListener('click', () => {
		body.style.backgroundColor = 'rgba(38, 40, 45, 1)';
		lightWrapper.style.opacity= '0';
		darkWrapper.style.opacity= '1';
		darkButton.classList.add('active');
		lightButton.classList.remove('active');
		currentTheme = 'dark';
		localStorage.setItem('theme', currentTheme);
	});

	lightButton.addEventListener('click', () => {
		body.style.backgroundColor = 'rgba(237, 244, 255, 1)'
		darkWrapper.style.opacity= '0';
		lightWrapper.style.opacity= '1';
		lightButton.classList.add('active');
		darkButton.classList.remove('active');
		currentTheme = 'light';
		localStorage.setItem('theme', currentTheme);
	});

	window.addEventListener('DOMContentLoaded', () => {
		const localTheme = localStorage.getItem('theme');
		if (localTheme === 'dark'){
			body.style.backgroundColor = 'rgba(38, 40, 45, 1)';
			lightWrapper.style.opacity= '0';
			darkWrapper.style.opacity= '1';
			darkButton.classList.add('active');
			lightButton.classList.remove('active');
		}
		else{
			body.style.backgroundColor = 'rgba(237, 244, 255, 1)'
			darkWrapper.style.opacity= '0';
			lightWrapper.style.opacity= '1';
			lightButton.classList.add('active');
			darkButton.classList.remove('active');
		}
	});
</script>